<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BookStore</name>
    </assembly>
    <members>
        <member name="M:BookStore.Controllers.BookController.#ctor(BusinessLayer.Interface.IBookService)">
            <summary>
            Getting object of BookService using DI
            </summary>
            <param name="service">BookService object for business logic</param>
        </member>
        <member name="M:BookStore.Controllers.BookController.AddBook(ModelLayer.BookDto.BookRequestDto)">
            <summary>
            Endpoint for adding new books. Only admins are authorized to add.
            </summary>
            <param name="requestDto"> Required body in form of BookRequestDto object</param>
            <returns>readystate and data</returns>
        </member>
        <member name="M:BookStore.Controllers.BookController.GetAllBooks(System.String,System.Int32,System.String,System.String)">
            <summary>
            Endpoint for get books based on filters.
            </summary>
            <param name="field">field to be sorted on</param>
            <param name="limit">Number of items to be retrieved</param>
            <param name="lastItemValue">Last value of the previous request</param>
            <param name="sortby">ascending or descending</param>
            <returns>readystate and data</returns>
        </member>
        <member name="M:BookStore.Controllers.BookController.GetBook(System.Int32)">
            <summary>
            Endpoint for detailed view for book
            </summary>
            <param name="id">Book id</param>
            <returns>readystate and data</returns>
        </member>
        <member name="M:BookStore.Controllers.BookController.RemoveBook(System.Int32)">
            <summary>
            Endpoint for deleting book. Only admiins are authorized to delete books
            </summary>
            <param name="id"></param>
            <returns>readystate or 404</returns>
        </member>
        <member name="M:BookStore.Controllers.BookController.UpdateBook(System.Int32,ModelLayer.BookDto.BookRequestDto)">
            <summary>
            Endpoint for updating book. Only admiins are authorized to delete books
            </summary>
            <param name="id"></param>
            <param name="requestDto"></param>
            <returns>readystate and updated data or 404</returns>
        </member>
        <member name="M:BookStore.Controllers.CartController.AddToCart(ModelLayer.CartDto.CartRequestDto)">
            <summary>
            Adds to cart.
            </summary>
            <param name="cart">The cart item info.</param>
            <returns>readystate and added cart item</returns>
        </member>
        <member name="M:BookStore.Controllers.CartController.GetItemsFromCart">
            <summary>
            Gets the items from cart.
            </summary>
            <returns>readystate and added cart item</returns>
        </member>
        <member name="M:BookStore.Controllers.CartController.RemoveFromCart(System.Int32)">
            <summary>
            Removes from cart.
            </summary>
            <param name="bookId">The book identifier.</param>
            <returns>readystate or bad request</returns>
        </member>
        <member name="M:BookStore.Controllers.CartController.UpdateInCart(ModelLayer.CartDto.CartRequestDto)">
            <summary>
            Updates the in cart.
            </summary>
            <param name="cart">The cart item update information.</param>
            <returns></returns>
        </member>
        <member name="M:BookStore.Controllers.OrderController.#ctor(BusinessLayer.Interface.IOrderService)">
            <summary>
            Initializes a new instance of the <see cref="T:BookStore.Controllers.OrderController"/> class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:BookStore.Controllers.OrderController.AddOrder(ModelLayer.OrderDto.OrderRequestDto)">
            <summary>
            Places new order.
            </summary>
            <param name="order">The order details.</param>
            <returns></returns>
        </member>
        <member name="M:BookStore.Controllers.UserController.Login(ModelLayer.LoginDto)">
            <summary>
            Authenticate user.
            </summary>
            <param name="loginDto">Login Id and password</param>
            <returns>readystate or Unauthorized state</returns>
        </member>
        <member name="M:BookStore.Controllers.UserController.AddUser(ModelLayer.UserDto.UserRequestDto)">
            <summary>
            Adds the user.
            </summary>
            <param name="requestDto">User data.</param>
            <returns>readystate</returns>
        </member>
        <member name="M:BookStore.Controllers.UserController.ForgotPassword(System.String)">
            <summary>
            Sends reset link of provided email.
            </summary>
            <param name="email">The email.</param>
            <returns>readystate</returns>
        </member>
        <member name="M:BookStore.Controllers.UserController.Reset(System.String,System.String)">
            <summary>
            Sets new password given by user.
            </summary>
            <param name="password">The password.</param>
            <param name="token">The token.</param>
            <returns>readystate</returns>
        </member>
        <member name="M:BookStore.Controllers.WishlistController.AddToWishList(ModelLayer.WishlistDto.WishlistDto)">
            <summary>
            Adds to wish list.
            </summary>
            <param name="wishlist">The wishlist dto.</param>
            <returns>readystate</returns>
        </member>
        <member name="M:BookStore.Controllers.WishlistController.GetWishlists">
            <summary>
            Gets the wishlists items.
            </summary>
            <returns>readystate</returns>
        </member>
        <member name="M:BookStore.Controllers.WishlistController.RemoveFromWishList(System.Int32)">
            <summary>
            Removes from wish list.
            </summary>
            <param name="bookId">The book identifier.</param>
            <returns>readystate or 404</returns>
        </member>
        <member name="M:Fundoo.Utilities.Swagger.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extension method to IServiceCollection that registers the swagger to services.
            </summary>
            <param name="services">The IServiceCollection object.</param>
        </member>
        <member name="M:Fundoo.Utilities.Swagger.UseCustomSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the custom swagger.
            </summary>
            <param name="app">The IApplicationBuilder object.</param>
        </member>
        <member name="T:ModelLayer.ResponseMessage">
            <summary>
            Custom response messages.
            </summary>
        </member>
    </members>
</doc>
